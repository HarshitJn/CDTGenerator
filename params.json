{"name":"Constrained Delaunay Tetrahedralization Generator","tagline":"Implementation of the paper \"Meshing piecewise linear complex using CDT\" by Hang Si et. al","body":"# CDTGenerator\r\nThis project is an implementation of the paper \"Meshing piecewise linear complex using CDT\" by Hang Si et. al. Constrained Delaunay tetrahedralization attempts to retain Delunay property for cells while ensuring preservation of constraint vertices, segments and facets. \r\n\r\n## Algorithm overview\r\nAlgorithm is based on [Shewchuck's theorem](www.cs.berkeley.edu/~jrs/papers/cdt.pdf) which states that: 'If a PLC _X_ is _edge protected_ and there are no cospherical 5-points in vertex set of _X_ then CDT of X exists'. This algorithm first transforms the input _Piecewise linear complex_(or PLC) to a PLC which is edge protected and then removes any degenerate point set and then tranformed PLC is guarnateed to have CDT. Precisely,\r\n1. Computes initial Delaunay tetrahedralization\r\n2. Makes segments _strongly delaunay_\r\n3. Removes _local_ degeneracies\r\n4. Recovers facets using _cavity retetrahedralization_ \r\n\r\n# Dependencies\r\nThis implementation extensively uses CGAL's [Delaunay triangulation](http://doc.cgal.org/latest/Triangulation_3/index.html#Triangulation_3Delaunay) and [Linear Cell complex](http://doc.cgal.org/latest/Linear_cell_complex/index.html) modules. \r\n\r\n# Building\r\nThe code is under testing right now but one can get fair idea of overall steps involved in implementation of Hang Si's Constrained Delaunay tetrahedralization(CDT) algorithm.\r\n\r\n# Extension\r\nMain objective is to extend this implementation to support adaptive Constrained Delaunay tetrahedralization for 3D domain.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}